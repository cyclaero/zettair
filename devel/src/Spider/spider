#!/bin/sh
#
# spider script for synchronizing a documents directoy with text/html-file store for indexing with zettair
# requirements:
#  clone     -- for hard linking the store to a temperary directory
#  pdftotext -- for converting PDF to bare HTML files (tool in the poppler package)
#  iconv     -- for converting UTF-8 to ISO-8859-1
#  zet       -- for indexing (tool in the zettair package)


export LANG="en_US.UTF-8"
export MM_CHARSET="UTF-8"

DOCUMENTS_DIR="$1"
if [ ! -d "$DOCUMENTS_DIR" ]; then
   echo "The documents directory does not exist"
   exit
fi

ZETTAIR_DIR="/var/db/zettair"
if [ ! -d "$ZETTAIR_DIR" ]; then
   echo "The directory which holds the Zettair search index does not exist"
   exit
fi

cd "$ZETTAIR_DIR"

if [ ! -e "token" ] && [ "$2" != "force" ] || [ -e "running" ]; then
   if [ "$2" == "force" ]; then
      echo "$0 is running already."
   else
      exit
   fi
else
   touch "running"
   rm -f "token"
fi

if [ -d "changes" ] && [ -d "isohtml" ]; then
   /usr/bin/find "changes" -links 2 -and \! -type d -print0 | xargs -0 rm -v >/dev/null 2>&1
else
   rm -rf "changes" "isohtml"
   /usr/local/bin/clone -lv0 "$DOCUMENTS_DIR" "changes"
fi

/usr/bin/find changes -type d | while read -r dname ; do
   /bin/mkdir -p `echo "$dname" | /usr/bin/sed "s|changes|isohtml|"`
done


cd "changes"

/usr/bin/find . -iname "*.html" -or -iname "*.htm" | while read -r fname ; do
   if [ -e "$DOCUMENTS_DIR/$fname" ]; then
      /usr/bin/iconv -s -f UTF-8 -t ISO-8859-1//TRANSLIT//IGNORE "$DOCUMENTS_DIR/$fname" > "../isohtml/$fname.iso.html"
   else
      rm -f "../isohtml/$fname.iso.html"
   fi
done

/usr/bin/find . -iname "*.pdf" | while read -r fname ; do
   if [ -e "$DOCUMENTS_DIR/$fname" ]; then
      /usr/local/bin/pdftotext -enc Latin1 -htmlmeta "$DOCUMENTS_DIR/$fname" "../isohtml/$fname.iso.html"
   else
      rm -f "../isohtml/$fname.iso.html"
   fi
done

/usr/bin/find . -iname "*.txt" | while read -r fname ; do
   if [ -e "$DOCUMENTS_DIR/$fname" ]; then
      echo "<HTML><BODY>" > "../isohtml/$fname.iso.html"
      /usr/bin/iconv -s -f UTF-8 -t ISO-8859-1//TRANSLIT//IGNORE "$DOCUMENTS_DIR/$fname" >> "../isohtml/$fname.iso.html"
      echo "</BODY></HTML>" >> "../isohtml/$fname.iso.html"
   else
      rm -f "../isohtml/$fname.iso.html"
   fi
done

/usr/bin/find . -iname "*.rtf" -or -iname "*.rtfd.zip" | while read -r fname ; do
   if [ -e "$DOCUMENTS_DIR/$fname" ]; then
      /usr/local/bin/rtftotext.py "$DOCUMENTS_DIR/$fname" > "../isohtml/$fname.iso.html"
   else
      rm -f "../isohtml/$fname.iso.html"
   fi
done

/usr/bin/find . -iname "*.docx" | while read -r fname ; do
   if [ -e "$DOCUMENTS_DIR/$fname" ]; then
      /usr/local/bin/docxtotext.py "$DOCUMENTS_DIR/$fname" > "../isohtml/$fname.iso.html"
   else
      rm -f "../isohtml/$fname.iso.html"
   fi
done

/usr/bin/find . -iname "*.pptx" | while read -r fname ; do
   if [ -e "$DOCUMENTS_DIR/$fname" ]; then
      /usr/local/bin/pptxtotext.py "$DOCUMENTS_DIR/$fname" > "../isohtml/$fname.iso.html"
   else
      rm -f "../isohtml/$fname.iso.html"
   fi
done

/usr/bin/find . -iname "*.xlsx" | while read -r fname ; do
   if [ -e "$DOCUMENTS_DIR/$fname" ]; then
      /usr/local/bin/xlsxtotext.py "$DOCUMENTS_DIR/$fname" > "../isohtml/$fname.iso.html"
   else
      rm -f "../isohtml/$fname.iso.html"
   fi
done

cd ..


rm -rf changes
/usr/local/bin/clone -lv0 "$DOCUMENTS_DIR" "changes"

rm -f index*
/usr/bin/find isohtml -name "*.iso.html" | /usr/local/bin/zet -i >/dev/null 2>&1

rm -f running
